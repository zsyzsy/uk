user nginx;

worker_processes  auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

error_log /var/log/nginx/error.log warn;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
    use epoll;
    worker_connections  10240;
}


http {

    include       mime.types;
    default_type  application/octet-stream;
    underscores_in_headers on;
    server_tokens off;
    fastcgi_intercept_errors on;
    
    log_format  main  '$http_traceid "$time_local" "$http_content_type" $http_host "$http_imei $http_did" $http_appversion "$http_osinfo $http_systemversion" '
                      '$http_clientIp "$request" "$http_cookie" "$sent_http_set_cookie $request_length $bytes_sent" "$upstream_addr" $status $upstream_response_time';

    access_log  /var/log/nginx/access.log  main;

    log_subrequest on;

    sendfile       on;
    tcp_nodelay    on;
    tcp_nopush     on;

    reset_timedout_connection    on;

    client_max_body_size         20m;    #允许客户端请求的最大单文件字节数
    client_body_buffer_size      4m;     #缓冲区代理缓冲用户端请求的最大字节数，
    proxy_connect_timeout        25;     #nginx跟后端服务器连接超时时间(代理连接超时)
    proxy_send_timeout           25;     #后端服务器数据回传时间(代理发送超时)
    proxy_read_timeout           25;     #连接成功后，后端服务器响应时间(代理接收超时)
    proxy_buffer_size            4k;     #设置代理服务器（nginx）保存用户头信息的缓冲区大小
    proxy_buffers                4 32k;  #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置
    proxy_busy_buffers_size      64k;    #高负荷下缓冲大小（proxy_buffers*2）
    proxy_temp_file_write_size   64k;    #设定缓存文件夹大小，大于这个值，将从upstream服务器传

    send_timeout                 60;
    keepalive_timeout            60;

    open_file_cache max=204800 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 1;

    gzip              on;
    gzip_min_length   1k;
    gzip_buffers      4 16k;
    gzip_comp_level   6;
    gzip_types        text/plain application/javascript text/css image/jpeg image/gif image/png;
    gzip_vary         on;
	
   
    limit_conn_zone $http_clientIp zone=conn_limit_per_ip:100m;
    limit_conn conn_limit_per_ip 500;

    limit_conn_zone $server_name zone=conn_limit_per_server:200m;
    limit_conn conn_limit_per_server 10000;

    limit_req_zone $http_clientIp zone=req_limit_per_ip:100m     rate=60r/m;
    limit_req_zone $server_name   zone=req_limit_per_server:100m rate=4000r/m;

    limit_req_zone $http_clientIp zone=hand_limit_per_ip:100m    rate=5400r/m;
    limit_req_zone $http_imei     zone=hand_limit_per_imei:100m  rate=600r/m;

    server {
        listen       8080 so_keepalive=off;
		
		location / {
           return 404;
        }
		
		location /ecloud/ {
            root   /static;
        }
		
		location /ecloud/ukf/ {
            root   /static;
            index  index.html;
        }
		

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
